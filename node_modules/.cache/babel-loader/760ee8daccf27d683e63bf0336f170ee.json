{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ABHINAV ANAND\\\\Desktop\\\\smartbrain-project\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './component/Navigation/Navigation';\nimport Logo from './component/Logo/Logo';\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport Rank from './component/Rank/Rank';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: '73135364f981423da0fde2865f2d7b10'\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.calulatefaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputImage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      console.log(width, height);\n      console.log(clarifaiFace);\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(function (response) {\n        this.calulatefaceLocation(response);\n      }, function (err) {// there was an error\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Navigation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Rank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FaceRecognition, {\n      imageUrl: this.state.imageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ABHINAV ANAND/Desktop/smartbrain-project/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","calulatefaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","console","log","onInputChange","event","setState","input","target","onSubmit","imageUrl","state","models","predict","FACE_DETECT_MODEL","then","response","err","box","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './component/Navigation/Navigation';\nimport Logo from './component/Logo/Logo'\nimport ImageLinkForm from './component/ImageLinkForm/ImageLinkForm';\nimport Rank from './component/Rank/Rank';\nimport FaceRecognition from './component/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n  apiKey: '73135364f981423da0fde2865f2d7b10'\n });\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 150,\n      density: {\n        enable: true,\n        value_area: 1000\n      }\n    }\n  }\n}\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state= {\n      input: '',\n      imageUrl: '',\n      box: {},\n    }\n  }\n\n  calulatefaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width, height);\n    console.log(clarifaiFace);\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(\n      function(response) {\n        this.calulatefaceLocation(response);\n      },\n      function(err) {\n        // there was an error\n      }\n  );\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm \n          onInputChange = {this.onInputChange} \n          onSubmit = {this.onSubmit}/>\n        <FaceRecognition imageUrl = {this.state.imageUrl} /> \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}